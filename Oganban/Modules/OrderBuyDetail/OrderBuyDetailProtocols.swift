//
//  OrderDetailProtocols.swift
//  Oganban
//
//  Created Kai Pham on 12/23/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol OrderBuyDetailWireframeProtocol: class {

}
//MARK: Presenter -
protocol OrderBuyDetailPresenterProtocol: class {

    var interactor: OrderBuyDetailInteractorInputProtocol? { get set }
    
    func bookingOrder(recordID: String, price: Double, quantity: Int, paymentType: String, isService: Bool)
    func getDetail(id: String)
}

//MARK: Interactor -
protocol OrderBuyDetailInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func didGetDetail(record: RecordEntity?)
    func didBooking(order: OrderEntity?)
}

protocol OrderBuyDetailInteractorInputProtocol: class {

    var presenter: OrderBuyDetailInteractorOutputProtocol?  { get set }

    /* Presenter -> Interactor */
    func getDetail(id: String)
    func bookingOrder(recordID: String, price: Double, quantity: Int, paymentType: String, isService: Bool)
}

//MARK: View -
protocol OrderBuyDetailViewProtocol: class {

    var presenter: OrderBuyDetailPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    func didGetDetail(record: RecordEntity?)
    func didBooking(order: OrderEntity?)
}
