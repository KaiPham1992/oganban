//
//  OrderDetailProtocols.swift
//  Oganban
//
//  Created Kai Pham on 12/23/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol OrderBuyDetailWireframeProtocol: class {
    func gotoLogin()
}
//MARK: Presenter -
protocol OrderBuyDetailPresenterProtocol: class {

    var interactor: OrderBuyDetailInteractorInputProtocol? { get set }
    
    func bookingOrder(recordID: String, price: Double, quantity: Int, paymentType: String, isService: Bool)
    func getDetail(id: String)
    func AddFavorite(isFavorite: Int, accountID: Int)
    
    
    //---
    func gotoLogin()
    func sendComment(param: SendCommentParam)
    func sendSubComment(param: SendCommentParam)
    func getCommentList(recordId: String, offset: Int)
}

//MARK: Interactor -
protocol OrderBuyDetailInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func didGetDetail(record: RecordEntity?)
    func didBooking(order: OrderEntity?)
    func didAddFavorite(data: BaseResponse?)
    
    func didSendComment(comment: CommentEntity?)
    func didSubSendComment(comment: SubCommentEntity?)
    func didGetComment(commentResponseEntity: CommentResponseEntity?)
}

protocol OrderBuyDetailInteractorInputProtocol: class {

    var presenter: OrderBuyDetailInteractorOutputProtocol?  { get set }

    /* Presenter -> Interactor */
    func getDetail(id: String)
    func bookingOrder(recordID: String, price: Double, quantity: Int, paymentType: String, isService: Bool)
    func AddFavorite(isFavorite: Int, accountID: Int)
    
    func sendComment(param: SendCommentParam)
    func getCommentList(recordId: String, offset: Int)
}

//MARK: View -
protocol OrderBuyDetailViewProtocol: class {

    var presenter: OrderBuyDetailPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    func didGetDetail(record: RecordEntity?)
    func didBooking(order: OrderEntity?)
    func didAddFavorite(data: BaseResponse?)
    
    func didSendComment(comment: CommentEntity?)
    func didSendSubComment(comment: SubCommentEntity?)
    func didGetComment(commentResponseEntity: CommentResponseEntity?)
}
