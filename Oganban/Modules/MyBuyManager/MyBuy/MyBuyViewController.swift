//
//  MyBuyViewController.swift
//  Oganban
//
//  Created Coby on 12/29/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import DropDown

class MyBuyViewController: BaseViewController {
    
    @IBOutlet weak var tbMyBuy: UITableView!
    @IBOutlet weak var vRecordBuy: UIView!
    @IBOutlet weak var lbStatusRecord: UILabel!
    @IBOutlet weak var lbTotal: UILabel!
    @IBOutlet weak var vDropDownStatus: UIView!
    @IBOutlet weak var vCheckLogin: UIView!
    @IBOutlet weak var btnLogin: UIButton!
    
    var presenter: MyBuyPresenterProtocol?
    
    let dropDownStatus = DropDown()
    
    var isAllOrder: Bool = false
    
    var dataOrder: BaseOrderEntity? {
        didSet {
            tbMyBuy.reloadData()
            
            if let count = self.dataOrder?.dataOrder.count {
                if count == 0 {
                    tbMyBuy.isHidden = true
                    showNoData()
                    setStatusType()
                } else {
                    tbMyBuy.isHidden = false
                    hideNoData()
                    setupDropDownStatus()
                    setStatusType()
                }
            }
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
    
    
    
    func setupView() {
        self.setTitleNavigation(title: NavigationTitle.myBuy)
        configTableView()
        setupDropDownStatus()
        getData()
        btnLogin.setBorderWithCornerRadius(borderWidth: 0, borderColor: .clear, cornerRadius: 20)

    }
    
    func getData() {
        presenter?.getHistoryOrder(status: StatusType.new.rawValue, offset: 0, limit: 10)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        showTabbar()
        checkLogin()
    }
    
    func checkLogin() {
        if UserDefaultHelper.shared.isLoggedIn {
            vCheckLogin.isHidden = true
            getData()
        } else {
            vCheckLogin.isHidden = false
        }
    }
    
    func configTableView() {
        tbMyBuy.dataSource = self
        tbMyBuy.delegate = self
        
        tbMyBuy.registerTableCell(MyBuyCell.self)
        
        tbMyBuy.contentInset.bottom = 10
        tbMyBuy.tableFooterView = UIView()
    }
    
    func setStatusType() {
        if (dataOrder?.dataOrder.count)! > 0 {
            if let status = dataOrder?.dataOrder[0].status, let countOrder = dataOrder?.countOrder {
                switch  status  {
                case StatusType.new.rawValue:
                    self.lbTotal.text = "Tổng đơn hàng đang chờ duyệt: \(countOrder)"
                case StatusType.wait_delivery.rawValue:
                    self.lbTotal.text = "Tổng đơn hàng đang giao: \(countOrder)"
                case StatusType.done.rawValue:
                    self.lbTotal.text = "Tổng đơn hàng đã hoàn tất: \(countOrder)"
                case StatusType.cancel.rawValue:
                    self.lbTotal.text = "Tổng đơn hàng đã huỷ: \(countOrder)"
                case StatusType.all.rawValue:
                    self.lbTotal.text = "Tất cả các đơn hàng: \(countOrder)"
                default:
                    self.lbTotal.text = "Tổng đơn hàng: 0"
                }
            }
        }
        
    }
    
    private func setupDropDownStatus() {
        dropDownStatus.anchorView = vDropDownStatus
        dropDownStatus.backgroundColor = AppColor.main
        DropDown.appearance().setupCornerRadius(10)
        dropDownStatus.textColor = .white
        dropDownStatus.textFont = AppFont.fontRegular11
        dropDownStatus.separatorColor = .gray
        dropDownStatus.selectionBackgroundColor = AppColor.main
        dropDownStatus.selectedTextColor = .yellow
        dropDownStatus.downScaleTransform = CGAffineTransform(rotationAngle: (-.pi))
        dropDownStatus.dataSource = ["Chờ duyệt", "Đang giao", "Hoàn Tất", "Đã huỷ", "Tất cả"]
        dropDownStatus.selectionAction = { [weak self](index, item) in
            guard let `self` = self else { return }
            self.lbStatusRecord.text = item
            
            switch item {
            case "Chờ duyệt":
                self.presenter?.getHistoryOrder(status: StatusType.new.rawValue, offset: 0, limit: 10)
                
                self.lbTotal.text = "Tổng đơn hàng đang chờ duyệt: 0"
                
            case "Đang giao":
                self.presenter?.getHistoryOrder(status: StatusType.wait_delivery.rawValue, offset: 0, limit: 10)
                
                self.lbTotal.text = "Tổng đơn hàng đang giao: 0"
                
            case "Hoàn Tất":
                self.presenter?.getHistoryOrder(status: StatusType.done.rawValue, offset: 0, limit: 10)
                
                self.lbTotal.text = "Tổng đơn hàng đã hoàn tất: 0"
                
            case "Đã huỷ":
                self.presenter?.getHistoryOrder(status: StatusType.cancel.rawValue, offset: 0, limit: 10)
                
                self.lbTotal.text = "Tổng đơn hàng đã huỷ: 0"
            case "Tất cả":
                self.presenter?.getHistoryOrder(status: StatusType.all.rawValue, offset: 0, limit: 10)
                self.lbTotal.text = "Tổng tất cả các đơn hàng: 0"
                self.isAllOrder = true
            default:
                break
            }
        }
    }
    
    @IBAction func btnChangeStatusRecord() {
        dropDownStatus.show()
    }
    
    @IBAction func btnLoginTapped() {
        
    }
}

extension MyBuyViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        guard let count = dataOrder?.dataOrder.count else { return 0 }
        return count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueTableCell(MyBuyCell.self)
        cell.vMyBuyView.order = dataOrder?.dataOrder[indexPath.item]
        cell.vMyBuyView.isAllOrder = self.isAllOrder
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 125
    }
    
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        let vc = MyBuyDetailRouter.createModule()
        self.push(controller: vc)
    }
}

extension MyBuyViewController: MyBuyViewProtocol {
    func didGetHistoryOrder(data: BaseOrderEntity?) {
        self.dataOrder = data
    }
}
