//
//  CommentDetailPresenter.swift
//  Oganban
//
//  Created DINH VAN TIEN on 1/12/19.
//  Copyright © 2019 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class CommentDetailPresenter: CommentDetailPresenterProtocol {
    

    weak private var view: CommentDetailViewProtocol?
    var interactor: CommentDetailInteractorInputProtocol?
    private let router: CommentDetailWireframeProtocol

    init(interface: CommentDetailViewProtocol, interactor: CommentDetailInteractorInputProtocol?, router: CommentDetailWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func sendSubComment(param: SendCommentParam) {
        interactor?.sendComment(param: param)
    }
    
    func sendComment(param: SendCommentParam) {
        interactor?.sendComment(param: param)
    }
    
    func getCommentList(recordId: String, offset: Int) {
        interactor?.getCommentList(recordId: recordId, offset: offset)
    }

    func getCommentParent(commentID: String) {
        interactor?.getCommentParent(commentID: commentID)
    }
    
    func getCommentChild(commentID: String, offset: Int, limit: Int) {
        interactor?.getCommentChild(commentID: commentID, offset: offset, limit: limit)
    }
}

extension CommentDetailPresenter: CommentDetailInteractorOutputProtocol {
    func didGetComment(commentResponseEntity: CommentResponseEntity?) {
        view?.didGetComment(commentResponseEntity: commentResponseEntity)
    }
    
    func didSendComment(comment: CommentEntity?) {
        view?.didSendComment(comment: comment)
    }
    
    func didSubSendComment(comment: SubCommentEntity?) {
        view?.didSendSubComment(comment: comment)
    }
    
    func didGetCommentParent(comment: CommentEntity?) {
        view?.didGetCommentParent(comment: comment)
    }
    
    func didGetCommentChild(subComment: CommentChildEntity?) {
        view?.didGetCommentChild(subComment: subComment)
    }
}
