//
//  OrderDetailPresenter.swift
//  Oganban
//
//  Created Kai Pham on 12/23/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class OrderDetailPresenter: OrderDetailPresenterProtocol {
    
    weak private var view: OrderDetailViewProtocol?
    var interactor: OrderDetailInteractorInputProtocol?
    private let router: OrderDetailWireframeProtocol

    init(interface: OrderDetailViewProtocol, interactor: OrderDetailInteractorInputProtocol?, router: OrderDetailWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    

    func getDetail(id: String) {
        interactor?.getDetail(id: id)
    }
    
    func hideRecord(recordID: String) {
        interactor?.hideRecord(recordID: recordID)
    }
    
    func editRecord(recordID: String, expiredDate: String) {
        interactor?.editRecord(recordID: recordID, expiredDate: expiredDate)
    }
    
    func getExpiredDay() {
        interactor?.getExpiredDay()
    }
    
    func sendComment(param: SendCommentParam) {
        interactor?.sendComment(param: param)
    }
    
    func getCommentList(recordId: String, offset: Int, limit: Int) {
        interactor?.getCommentList(recordId: recordId, offset: offset, limit: limit)
    }
    
}

extension OrderDetailPresenter: OrderDetailInteractorOutputProtocol {
    func didGetCommentList(list: [CommentResponseEntity]) {
        view?.didGetCommentList(list: list)
    }
    
    func didSendComment(comment: CommentResponseEntity?) {
        view?.didSendComment(comment: comment)
    }
    
    func didGetDetail(record: RecordEntity?) {
        view?.didGetDetail(record: record)
    }
    
    func didHideRecord(data: BaseResponse?) {
        view?.didHideRecord(data: data)
    }
    
    func didEditRecord(data: BaseResponse?) {
        view?.didEditRecord(data: data)
    }
}
