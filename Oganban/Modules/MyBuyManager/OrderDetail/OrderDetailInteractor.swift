//
//  OrderDetailInteractor.swift
//  Oganban
//
//  Created Kai Pham on 12/23/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class OrderDetailInteractor: OrderDetailInteractorInputProtocol {
   
    weak var presenter: OrderDetailInteractorOutputProtocol?
    
    func getDetail(id: String) {
        ProgressView.shared.show()
        Provider.shared.recordAPIService.getRecordDetail(id: id, success: { record in
            ProgressView.shared.hide()
            self.presenter?.didGetDetail(record: record)
        }) { _ in
            ProgressView.shared.hide()
        }
    }
    
    func hideRecord(recordID: String) {
        Provider.shared.recordAPIService.hideRecord(recordID: recordID, success: { (data) in
            self.presenter?.didHideRecord(data: data)
        }) { (_) in
            
        }
    }
    
    func editRecord(recordID: String, expiredDate: String) {
        Provider.shared.recordAPIService.updateRecord(recordID: recordID, expiredDate: expiredDate, success: { (data) in
            self.presenter?.didEditRecord(data: data)
        }) { (_) in
            
        }
    }
    
    func getExpiredDay() {
        ProgressView.shared.show()
        Provider.shared.recordAPIService.getExpireDateRecord(success: { expireEntity in
            guard let date = expireEntity?.expiredDate else { return }
            DataManager.shared.maxDate = date
            ProgressView.shared.hide()
        }) { error in
            ProgressView.shared.hide()
            
        }
    }
    
    func sendComment(param: SendCommentParam) {
        ProgressView.shared.show()
        Provider.shared.recordAPIService.sendComment(param: param, success: { (comment) in
            ProgressView.shared.hide()
            self.presenter?.didSendComment(comment: comment)
        }) { (error) in
             ProgressView.shared.hide()
        }
    }
}
