//
//  OrderDetailViewController.swift
//  Oganban
//
//  Created Kai Pham on 12/23/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

enum OrderDetailInfoType: Int {
    case infoProduct = 0
    case intro
    case infoSaler
    case address
    case comment
}

class OrderDetailViewController: BaseViewController {
    
    var presenter: OrderDetailPresenterProtocol?
    
    @IBOutlet weak var vPostCommentView: PostCommentView!
    @IBOutlet weak var bottomConstant: NSLayoutConstraint!
    @IBOutlet weak var heightConstant: NSLayoutConstraint!
    
    
    var dateSelected: Date?
    
    var isNew: Bool = false
    var isWait: Bool = false
    var isDone: Bool = false
    var isCancel: Bool = false
    
    var sectionSentSubComment: Int?
    
    var record: RecordEntity? {
        didSet {
            tbDetail.reloadData()
        }
    }
    
    var recordId: String?
    
    var listHeader = ["Chi tiết", "Giới thiệu","Thông tin người bán", "Địa chỉ gợi ý để giao dịch", "Bình Luận"]
    
    var listComment = [CommentEntity]() {
        didSet {
            tbDetail.reloadData()
        }
    }
    
    @IBOutlet weak var tbDetail: UITableView!
    
    var tapGesture: UITapGestureRecognizer!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        addKeyboardNotification()
        vPostCommentView.delegate = self
        configureTable()
        
        presenter?.getDetail(id: recordId&)
        presenter?.getExpiredDay()
        presenter?.getCommentList(recordId: recordId&, offset: 0, limit: limitLoad)
    }
    
    override func setUpNavigation() {
        super.setUpNavigation()
        setTitleNavigation(title: "Chi tiết sản phẩm")
        addBackToNavigation()
        addButtonToNavigation(image: AppImage.imgShare, style: .right, action: #selector(btnShareTapped))
        self.tabBarController?.tabBar.isHidden = true
    }
    
    
    @objc func btnShareTapped() {
        ShareNativeHelper.shared.showShareLinkInstall(controller: self)
    }
    
}

extension OrderDetailViewController: OrderDetailViewProtocol {
    
    func didGetComment(commentResponseEntity: CommentResponseEntity?) {
        guard let _listComment = commentResponseEntity?.listComment else { return }
        
        self.listComment = _listComment
    }
    
    func didSendComment(comment: CommentEntity?) {
        guard let _comment = comment else { return }
        
        insertComment(comment: _comment)
    }
    
    func didSendSubComment(comment: SubCommentEntity?) {
        guard let _comment = comment else { return }
        guard let section = sectionSentSubComment else { return }
        insertSubComment(section: section, subComment: _comment)
    }
    
    func didGetDetail(record: RecordEntity?) {
        self.record = record
    }
    
    func didHideRecord(data: BaseResponse?) {
        PopUpHelper.shared.showMessageHaveAds(message: "Bạn đã ẩn tin đăng bán sản phẩm này !") {
            self.pop()
        }
    }
    
    func didEditRecord(data: BaseResponse?) {
        PopUpHelper.shared.showMessageHaveAds(message: "Bạn đã gia hạn tin thành công !") {
            self.pop()
        }
    }
}

extension OrderDetailViewController: OrderDetailImageCellDelegate {
    func btnEditTapped() {
        PopUpHelper.shared.showDateFollowWeekPopup(maxDate: DataManager.shared.maxDate) { date in
            guard let id = self.recordId, let _date = date else { return }
            self.presenter?.editRecord(recordID: id, expiredDate: _date.toString(dateFormat: AppDateFormat.yyyyMMdd))
        }
        
    }
    
    func btnHideTapped() {
        PopUpHelper.shared.showYesNoQuestionHaveAds(question: "Bạn có chắc muốn ẩn bài đăng này ?", completionYes: {
            guard let id = self.record?.id else { return }
            self.presenter?.hideRecord(recordID: id)
        }) {
            
        }
    }
}
