//
//  UpdateProfileViewController.swift
//  Oganban
//
//  Created Kent on 12/22/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class UpdateProfileViewController: BaseViewController {

	var presenter: UpdateProfilePresenterProtocol?
    
    @IBOutlet weak var lbError: UILabel!
    @IBOutlet weak var scrollView: UIScrollView!
    @IBOutlet weak var imgAvatar: UIImageView!
    @IBOutlet weak var btnSave: OganbanCustomButton!
    @IBOutlet weak var tfAddress2: OganbanCustomTextfield!
    @IBOutlet weak var tfAddress1: OganbanCustomTextfield!
    @IBOutlet weak var tvPhone: PhoneNumber!
    @IBOutlet weak var tfGender: OganbanCustomTextfield!
    @IBOutlet weak var tfBirthday: OganbanCustomTextfield!
    @IBOutlet weak var tfDisplayName: OganbanCustomTextfield!
    @IBOutlet weak var tfUsername: OganbanCustomTextfield!
    
    var birthDay: Date? = nil
    var gender: Gender? = nil
    var countryPhoneCode: CountryCodeEntity = {
        return CountryCodeEntity(name: "Vietnam", dialCode: "+84", code: "VN")
    } ()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        tapSaveButton()
        textFieldDidBeginEditing()
        hideError()
        addGesture()
    }
    
    func hideError(isHidden: Bool = true, message: String? = nil){
        lbError.isHidden = isHidden
        lbError.text = message ?? ""
    }
}

extension UpdateProfileViewController {
    func validateInputData() -> Bool {
        
        guard let username = self.tfUsername.tfContent.text else {
            hideError(isHidden: false, message: MessageString.emptyUsername)
            return false
        }
        
        if username == ""  {
            hideError(isHidden: false, message: MessageString.emptyUsername)
            return false
        }
        
        if username.isValidEmail() == false  {
            hideError(isHidden: false, message: MessageString.checkedUsername)
            return false
        }
        
        guard let displayName = self.tfDisplayName.tfContent.text else {
            hideError(isHidden: false, message: MessageString.emptyDisplayName)
            return false
        }
        
        if displayName == "" {
            hideError(isHidden: false, message: MessageString.emptyDisplayName)
            return false
        }
        
        guard let birthDay =  self.birthDay else {
            hideError(isHidden: false, message: MessageString.emptyBirthday)
            return false
        }
        
        let age = calculateAge(birthday: birthDay)
        if age < 15  {
            hideError(isHidden: false, message: MessageString.checkedAge)
            return false
        }
        
        guard let phone =  self.tvPhone.tfPhone.text else {
            hideError(isHidden: false, message: MessageString.emptyPhone)
            return false
        }
        
        if phone == "" {
            hideError(isHidden: false, message: MessageString.emptyPhone)
            return false
        }
        
        if phone.isValidPhone2() == false {
            hideError(isHidden: false, message: MessageString.checkedPhone)
            return false
        }
        
        hideError()
        return true
    }
    
    func calculateAge(birthday: Date) -> Int {
        let now = Date()
        let calendar = Calendar.current
        let ageComponents = calendar.dateComponents([.year], from: birthday, to: now)
        return ageComponents.year!
    }
}

extension UpdateProfileViewController: PhoneNumberDelegate {
    func phoneCodeChoose(info: CountryCodeEntity) {
        self.countryPhoneCode = info
    }
}
