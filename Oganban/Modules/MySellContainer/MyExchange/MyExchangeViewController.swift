//
//  MyExchangeViewController.swift
//  Oganban
//
//  Created Coby on 12/29/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import DropDown

protocol MyExchangeViewControllerDelegate: class {
    func gotoLogin()
}

class MyExchangeViewController: BaseViewController {
    
    @IBOutlet weak var tbMyExchange: UITableView!
    @IBOutlet weak var vRecordExchange: UIView!
    @IBOutlet weak var lbStatusExchange: UILabel!
    @IBOutlet weak var lbTotal: UILabel!
    @IBOutlet weak var vDropDownStatus: UIView!
    
    var presenter: MyExchangePresenterProtocol?
    weak var delegate: MyExchangeViewControllerDelegate?
    
    let dropDownStatus = DropDown()
    
    var listData: BaseOrderEntity? {
        didSet {
            tbMyExchange.reloadData()
            
            if let count = self.listData?.dataOrder, count.isEmpty {
                tbMyExchange.isHidden = true
                showNoData()
            } else {
                hideNoData()
            }
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
    
    func setupView() {
        
        configTableView()
        setupDropDownStatus()
        getData()
    }
    
    func getData() {
        self.presenter?.getTransactionSeller(status: "new", limit: 10, offset: 0)
    }
    
    func configTableView() {
        tbMyExchange.dataSource = self
        tbMyExchange.delegate = self
        
        tbMyExchange.registerTableCell(MyBuyCell.self)
        
        tbMyExchange.contentInset.bottom = 10
//        tbMyExchange.separatorStyle = .none
        tbMyExchange.tableFooterView = UIView()
    }
    
    private func setupDropDownStatus() {
        dropDownStatus.anchorView = vDropDownStatus
        dropDownStatus.backgroundColor = AppColor.main
        DropDown.appearance().setupCornerRadius(10)
        dropDownStatus.textColor = .white
        dropDownStatus.textFont = AppFont.fontRegular11
        dropDownStatus.separatorColor = .gray
        dropDownStatus.selectionBackgroundColor = AppColor.main
        dropDownStatus.selectedTextColor = .yellow
        dropDownStatus.downScaleTransform = CGAffineTransform(rotationAngle: (-.pi))
        dropDownStatus.dataSource = ["Chờ duyệt", "Đang giao", "Hoàn Tất", "Đã huỷ", "Tất cả"]
        dropDownStatus.selectionAction = { [weak self](index, item) in
            guard let `self` = self else { return }
            self.lbStatusExchange.text = item
            switch item {
            case "Chờ duyệt":
                self.lbTotal.text = "Tổng đơn hàng đang chờ duyệt: \(self.listData?.countOrder ?? 0)"
                self.presenter?.getTransactionSeller(status: "new", limit: 10, offset: 0)
            case "Đang giao":
                self.lbTotal.text = "Tổng đơn hàng đang giao: \(self.listData?.countOrder ?? 0)"
                self.presenter?.getTransactionSeller(status: "wait_delivery", limit: 10, offset: 0)
            case "Hoàn Tất":
                self.lbTotal.text = "Tổng đơn hàng đã hoàn tất: \(self.listData?.countOrder ?? 0)"
                self.presenter?.getTransactionSeller(status: "done", limit: 10, offset: 0)
            case "Đã huỷ":
                self.lbTotal.text = "Tổng đơn hàng đã huỷ: \(self.listData?.countOrder ?? 0)"
                self.presenter?.getTransactionSeller(status: "cancel", limit: 10, offset: 0)
            case "Tất cả":
                self.lbTotal.text = "Tổng tất cả đơn hàng: \(self.listData?.countOrder ?? 0)"
                self.presenter?.getTransactionSeller(status: "new", limit: 10, offset: 0)
            default:
                break
            }
        }
    }
    
    @IBAction func btnChangeStatusRecord() {
        dropDownStatus.show()
    }
}

extension MyExchangeViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        guard let count = listData?.dataOrder.count else { return 0 }
        return count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueTableCell(MyBuyCell.self)
        cell.vMyBuyView.order = listData?.dataOrder[indexPath.item]
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 120
    }
}

extension MyExchangeViewController: MyExchangeViewProtocol {
    
    func didGetTransactionSeller(data: BaseOrderEntity?) {
        self.listData = data
    }
    
}
