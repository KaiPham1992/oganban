//
//  OrderDetailViewController.swift
//  Oganban
//
//  Created Kai Pham on 12/23/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

enum OrderDetailInfoType: Int {
    case infoProduct = 0
    case intro
    case infoSaler
    case address
    case comment
}

class OrderDetailViewController: BaseViewController, OrderDetailViewProtocol {

	var presenter: OrderDetailPresenterProtocol?
    
    @IBOutlet weak var vPostCommentView: PostCommentView!
    @IBOutlet weak var bottomConstant: NSLayoutConstraint!
    @IBOutlet weak var heightConstant: NSLayoutConstraint!
    
    var listHeader = ["Chi tiết", "Giới thiệu","Thông tin người bán", "Địa chỉ", "Bình Luận"]
    
    var listComment = [CommentEntity]()
    
    @IBOutlet weak var tbDetail: UITableView!
    
    var tapGesture: UITapGestureRecognizer!

	override func viewDidLoad() {
        super.viewDidLoad()
        addKeyboardNotification()
        vPostCommentView.delegate = self
        configureTable()
        
        // FIX ME
        testComment()
    }
    
    func testComment() {
        for i in 0...3 {
            let newComment = CommentEntity(comment: "Comment \(i)")
            
            for j in 0...4 {
                let newSubComment = SubCommentEntity(comment: "Sub comment \(j)")
                newComment.subComment.append(newSubComment)
            }
            
            listComment.append(newComment)
        }
        
        tbDetail.reloadData()
    }
}
// MARK: table

extension OrderDetailViewController: UITableViewDelegate, UITableViewDataSource {
    func configureTable() {
        tbDetail.delegate = self
        tbDetail.dataSource = self
        tbDetail.registerXibFile(CommentCell.self)
        tbDetail.registerXibFile(AddressCell.self)
        tbDetail.registerXibFile(SubCommentCell.self)
        tbDetail.registerXibFile(ReplyCommentCell.self)
        tbDetail.separatorStyle = .none
        
        tbDetail.rowHeight = UITableView.automaticDimension
        tbDetail.estimatedRowHeight = 150
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return listHeader.count + self.listComment.count - 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        switch indexPath.section {
        case OrderDetailInfoType.infoProduct.rawValue, OrderDetailInfoType.intro.rawValue, OrderDetailInfoType.infoSaler.rawValue, OrderDetailInfoType.address.rawValue:
            let cell = tbDetail.dequeue(AddressCell.self, for: indexPath)
            
            return cell
        default:
            let indexComment = indexPath.section - (self.listHeader.count - 1)
            if indexPath.item == 0 {
                let cell = tbDetail.dequeue(CommentCell.self, for: indexPath)
                
                return cell
            } else if indexPath.item == self.listComment[indexComment].subComment.count {
                let cell = tbDetail.dequeue(ReplyCommentCell.self, for: indexPath)
                
                return cell
            }
            else {
                let cell = tbDetail.dequeue(SubCommentCell.self, for: indexPath)
                
                return cell
            }
        }
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        switch section {
        case OrderDetailInfoType.infoProduct.rawValue, OrderDetailInfoType.intro.rawValue, OrderDetailInfoType.infoSaler.rawValue, OrderDetailInfoType.address.rawValue:
            return 1
        default:
            let indexComment = section - (self.listHeader.count - 1)
            return self.listComment[indexComment].subComment.count + 1
        }
    }
    
    // Header
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let v = UIView()
        let header = HeaderOrderDetail()
        v.addSubview(header)
        header.fillSuperview()
        if section < self.listHeader.count {
            header.lbTitle.text = self.listHeader[section].uppercased()
            v.backgroundColor = AppColor.gray_65_65_65
        }
       
        return v
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        // comment show header only one
        if section >= self.listHeader.count {
            return 0
        }
        return 50
    }
}

// MARK: handle view post
extension OrderDetailViewController: PostCommentViewDelegate {
    func postCommentView(heightKeyboard: CGFloat) {
    }
    
    func postCommentView(changeHeight: CGFloat) {
        heightConstant.constant = changeHeight
    }
    
    func postCommentView(buttonPostTapped text: String) {
        print(text)
    }
    
    override func keyboardWillShow(_ notification: Notification) {
        print("addGesture")
        addGesture()
    }
    
    override func keyboardWillHide() {
        if tapGesture != nil {
            self.view.removeGestureRecognizer(tapGesture)
        }
    }
    
    func addGesture() {
        if tapGesture == nil {
            tapGesture = UITapGestureRecognizer(target: self, action: #selector(tapGestureExecute))
        }
        
        self.view.addGestureRecognizer(tapGesture)
    }
    
    @objc func tapGestureExecute() {
        self.view.endEditing(true)
    }
}

