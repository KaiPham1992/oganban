//
//  PositionViewController.swift
//  Oganban
//
//  Created DINH VAN TIEN on 12/29/18.
//  Copyright © 2018 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import GoogleMaps
import GooglePlaces
import DropDown

protocol PositionViewControllerDelegate: class {
    func positionSelected(location: CLLocationCoordinate2D, address: String, distance: Int, scale: String)
}

class PositionViewController: BaseViewController {

    @IBOutlet weak var mapView: GMSMapView!
    @IBOutlet weak var lbTitleMarker: UILabel!
    @IBOutlet weak var vTitleMarker: UIView!
    @IBOutlet weak var tfAddress: UITextField!
    @IBOutlet weak var vDropdown: UIView!
    @IBOutlet weak var lbScale: UILabel!
    
	var presenter: PositionPresenterProtocol?
    var locationManager = CLLocationManager()
    var centerMapCoordinate:CLLocationCoordinate2D!
    var marker:GMSMarker!
    var address = ""
    var dataSource: [String] = []
    var indexDistance = 0
    weak var delegate: PositionViewControllerDelegate?
    let scaleDropdown = DropDown()
    
	override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    override func setUpViews() {
        self.mapView?.isMyLocationEnabled = true
        //Location Manager code to fetch current location
        self.locationManager.delegate = self
        self.locationManager.startUpdatingLocation()
        mapView.settings.myLocationButton = true
        mapView.delegate = self
        tfAddress.delegate = self
        tfAddress.text = address
        setUpDropdown()
    }
    
    func setUpDropdown() {
        scaleDropdown.anchorView = vDropdown
        scaleDropdown.backgroundColor = AppColor.main
        DropDown.appearance().setupCornerRadius(10)
        scaleDropdown.textColor = .white
        scaleDropdown.textFont = AppFont.fontRegular11
        scaleDropdown.separatorColor = .gray
        scaleDropdown.selectionBackgroundColor = AppColor.main
        scaleDropdown.selectedTextColor = .yellow
        scaleDropdown.downScaleTransform = CGAffineTransform(rotationAngle: (-.pi))
        scaleDropdown.selectionAction = { [weak self](index, item) in
            guard let `self` = self else { return }
            self.lbScale.text = item
//            if  self.dataSource[index].title& == "Không giới hạn" {
//                self.paramFilter.radius = ""
//            } else {
//                self.paramFilter.radius = self.dataSource[index].title&
//            }
//            self.presenter?.filterRecord(param: self.paramFilter)
        }
    }

    override func setUpNavigation() {
        super.setUpNavigation()
        setTitleNavigation(title: "Chọn vị trí của bạn")
        addButtonTextToNavigation(title: "Huỷ", style: .left, action: #selector(btnRejectTapped), textColor: .gray)
        addButtonTextToNavigation(title: "Xong", style: .right, action: #selector(btnDoneTapped), textColor: .yellow)
    }
    
    @objc func btnRejectTapped() {
        presenter?.dismiss()
    }
    
    @objc func btnDoneTapped() {
        delegate?.positionSelected(location: centerMapCoordinate, address: tfAddress.text&, distance: 2, scale: <#String#>)
        presenter?.dismiss()
    }
    
    @IBAction func showDropdownTapped() {
        scaleDropdown.show()
    }
}

extension PositionViewController: PositionViewProtocol {
    
}

extension PositionViewController: CLLocationManagerDelegate {
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        
        let location = locations.last
        let camera = GMSCameraPosition.camera(withLatitude: (location?.coordinate.latitude)!, longitude: (location?.coordinate.longitude)!, zoom: 17.0)
        
        self.mapView?.animate(to: camera)
        self.locationManager.stopUpdatingLocation()
        
    }
}

extension PositionViewController: GMSMapViewDelegate {
    func mapView(_ mapView: GMSMapView, didChange position: GMSCameraPosition) {
        let latitude = mapView.camera.target.latitude
        let longitude = mapView.camera.target.longitude
        centerMapCoordinate = CLLocationCoordinate2D(latitude: latitude, longitude: longitude)
        self.placeMarkerOnCenter(centerMapCoordinate:centerMapCoordinate)
        print(centerMapCoordinate)
    }
    
    func mapView(_ mapView: GMSMapView, idleAt position: GMSCameraPosition) {
        print(mapView.camera.target)
        print(position.target)
        vTitleMarker.isHidden = false
    }
    
    func mapView(_ mapView: GMSMapView, willMove gesture: Bool) {
        vTitleMarker.isHidden = true
    }

    func placeMarkerOnCenter(centerMapCoordinate:CLLocationCoordinate2D) {
        if marker == nil {
            marker = GMSMarker()
        }

        marker.position = centerMapCoordinate
        marker.map = self.mapView
    }
}

extension PositionViewController: UITextFieldDelegate {
    func textFieldDidBeginEditing(_ textField: UITextField) {
        PositionMapsHelper.shared.showSearch { address in
            self.tfAddress.text = address
        }
    }
}
