//
//  PostStepTwoViewController.swift
//  Oganban
//
//  Created Kai Pham on 1/4/19.
//  Copyright © 2019 Coby. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PostStepTwoViewController: BaseViewController {
    
    var presenter: PostStepTwoPresenterProtocol?
    @IBOutlet weak var vAddress1: CheckBoxTextField!
    @IBOutlet weak var vAddress2: CheckBoxTextField!
    @IBOutlet weak var vCheckGPS: AppRadioButton!
    
    @IBOutlet weak var vMoney: CheckBoxTextField!
    @IBOutlet weak var vCoin: CheckBoxTextField!
    @IBOutlet weak var lbNotice: UILabel!
    
    var param = PostRecordParam()
    var errorMessage: String = ""
    
    var record: RecordEntity?
    var isCopyUpdate: Bool = false
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    
    
    override func setUpViews() {
        super.setUpViews()
        vAddress1.setTextField(title: "Địa chỉ 1", placeHolder: "Bạn có thể nhập địa chỉ nhà")
        vAddress2.setTextField(title: "Địa chỉ 2", placeHolder: "Bạn có thể nhập địa chỉ công ty")
        vCheckGPS.setTwoImage(imgCheck: AppImage.imgCheckedTerm, imgUnCheck: AppImage.imgCheckTerm)
        vCheckGPS.setTitle(title: "Vị trí GPS thực tế")
        vCheckGPS.lbTitle.textColor = AppColor.textTextField
        
        vMoney.setTextField(title: "Tiền mặt", placeHolder: "Nhập số tiền sẽ bán")
        vMoney.textField.keyboardType = UIKeyboardType.numberPad
        vMoney.textField.addTarget(self, action: #selector(editingChanged), for: UIControl.Event.editingChanged)
        vCoin.setTextField(title: "Trao đổi Ơcoin", placeHolder: "Nhập số Ơcoin sẽ bán")
        vCoin.textField.keyboardType = UIKeyboardType.numberPad
        lbNotice.textColor = AppColor.red
        
        vCoin.delegate = self
        vMoney.delegate = self
        vAddress1.delegate = self
        vAddress2.delegate = self
        
        vAddress1.textField.isEnabled = false
        vAddress2.textField.isEnabled = false
        vMoney.textField.isEnabled = false
        vCoin.textField.isEnabled = false
        showDataSaved()
    }
    
    func setupUpdate() {
        if isCopyUpdate {
            CopyUpdate()
        }
    }
    
    override func setUpNavigation() {
        super.setUpNavigation()
        
        addBackToNavigation()
        setTitleNavigation(title: "Đăng tin bán")
        setRedStatusBar()
    }
    
    func showDataSaved() {
        guard let _user = UserDefaultHelper.shared.loginUserInfo else { return }
        if _user.houseAddress != nil {
            vAddress1.textField.text = _user.houseAddress
        }
        
        if _user.companyAddress != nil {
            vAddress2.textField.text = _user.companyAddress
        }
        
    }
    
    @objc func editingChanged(textField: UITextField) {
        let money = textField.text&.toDouble()
        let coin = money / AppConstant.moneyToCoint
        vCoin.textField.text = coin.roundedTwoDemical()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        hideTabbar()
        setupUpdate()
    }
    
    @IBAction func btnPostTapped() {
        
        if validInput() {
            param.updateInfoStepTwo(address1: vAddress1.textField.text&, address2: vAddress2.textField.text&, isLatlong: vCheckGPS.isChecked, price: vMoney.textField.text&, coin: vCoin.textField.text&)
            
            presenter?.postRecord(param: param)
        }        
    }
    
    func validInput() -> Bool {
        if vAddress1.textField.text& == "" && vAddress1.isCheck {
            errorMessage = "Nhập địa chỉ 1"
            return false
        }
        
        if vAddress2.textField.text& == "" &&  vAddress2.isCheck {
            errorMessage = "Nhập địa chỉ 2"
            return false
        }
        
        if vMoney.textField.text& == "" && vMoney.isCheck {
            errorMessage = "Nhập số tiền cần bán"
            return false
        }
        
        if vCoin.textField.text& == "" && vCoin.isCheck {
            errorMessage = "Nhập số coin"
            return false
        }
        
        return true
    }
    
}

extension PostStepTwoViewController: PostStepTwoViewProtocol {
    func didPostRecord(record: RecordEntity?) {
        PopUpHelper.shared.showMessageHaveAds(message: "Đăng bán thành công")
        self.navigationController?.popToRootViewController(animated: true)
    }
    
    func didError(error: APIError?) {
        print(error?.message&)
    }
}

extension PostStepTwoViewController: CheckBoxTextFieldDelegate {
    func checkBoxTextField(didEndEditting checkBoxTextField: CheckBoxTextField) {
        if checkBoxTextField == vAddress2 || checkBoxTextField == vAddress1 {
            if checkBoxTextField.isCheck {
                PositionMapsHelper.shared.showSearch(controller: self) { address in
                    checkBoxTextField.textField.text = address
                }
            }
        }
    }
    
    func checkBoxTextField(checkBoxTextField: CheckBoxTextField, isChecked: Bool) {
        checkBoxTextField.textField.isEnabled = isChecked
    }
}
